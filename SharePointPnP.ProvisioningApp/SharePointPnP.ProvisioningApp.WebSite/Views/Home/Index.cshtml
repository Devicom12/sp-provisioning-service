@model SharePointPnP.ProvisioningApp.WebSite.Models.IndexViewModel

@functions{

    String StripHtml(String content)
    {
        var regex = new System.Text.RegularExpressions.Regex("\\<[^\\>]*\\>");
        return (regex.Replace(content, String.Empty));
    }

}

@Html.Partial("_TopHeader")

<!-- Inner Content Wrapper -->
<div class="wrapper">
    <div class="wrapper-inner">
        @*<div class="pnp-hero-divider">&nbsp;</div>*@
        @*<div class="pnp-svcteaser">
            <div class="pnp-svcteaser-inner">
                @(Html.Raw(Model.ServiceDescription))
                <a href="/home/contentPage?contentPageId=ServiceDescriptionLong" class="read-more">Read more</a>
            </div>
        </div>*@
        @*<div class="pnp-filter">
            <div class="pnp-search">
                <input type="text" class="pnp-search-input">
                <button class="pnp-search-button"></button>
            </div>
            <div class="pnp-filter-btn">
                <button class="pnp-filter-toggle active">Filter</button>
            </div>
        </div>*@
    <div class="pnp-hightlight-sm">
        @foreach (var package in Model.Packages.Where(p => p.Promoted).OrderByDescending(p => p.SortOrderPromoted))
        {
            <a href="/home/details?packageId=@package.Id" class="pnp-item pnp-item-large">
                <div class="pnp-img">
                    <img src="@package.ImagePreviewUrl" alt="@package.DisplayName" class="pnp-item-img">
                    @*@if (package.PackageType == SharePointPnP.ProvisioningApp.DomainModel.PackageType.SiteCollection)
                        {
                            <div class="pnp-item-label lbl-sc">Site Collection Owner</div>
                        }
                        else
                        {
                            <div class="pnp-item-label lbl-tenant">Tenant Admin</div>
                        }*@
                </div>
                <div class="pnp-item-desc">
                    <div class="pnp-item-title">@package.DisplayName</div>
                    <div class="pnp-item-content">
                        <p>@Html.Raw(package.Abstract)</p>
                    </div>
                </div>
            </a>
        }
    </div>
        <div class="pnp-categoryTabs">
            @{
                foreach (var category in Model.Categories)
                {
                    <div id="@("category-" + category.Key.ToLower())" onclick="selectCategory('@category.Key.ToLower()')" class="pnp-categoryTitle">@category.Value</div>
                }
            }
        </div>
        <div class="pnp-hightlight-reg">
            @foreach (var package in Model.Packages.OrderByDescending(p => p.SortOrder))
            {
                <a href="/home/details?packageId=@package.Id" class="pnp-item pnp-item-regular @(package.Categories.Aggregate("", (a, c) => a += $" category-{c.Id.ToLower()}"))">
                    <div class="pnp-img">
                        <img src="@package.ImagePreviewUrl" alt="@package.DisplayName" class="pnp-item-img">
                        @*@if (package.PackageType == SharePointPnP.ProvisioningApp.DomainModel.PackageType.SiteCollection)
                        {
                            <div class="pnp-item-label lbl-sc">Site Collection Owner</div>
                        }
                        else
                        {
                            <div class="pnp-item-label lbl-tenant">Tenant Admin</div>
                        }*@
                    </div>
                    <div class="pnp-item-desc">
                        <div class="pnp-item-title">@package.DisplayName</div>
                        <div class="pnp-item-content">
                            <p>@Html.Raw(package.Abstract)</p>
                        </div>
                    </div>
                </a>
            }
        </div>
    </div>
</div>

<img src="https://telemetry.sharepointpnp.com/provisioning-service/welcome-page" />

@section scripts
{
    <!-- build:js scripts/main.js -->
    <script src="/app/scripts/main.js"></script>
    <!-- endbuild -->

    <script>

        function selectCategory(categoryId) {

            // unselect the selected item
            var previouslySelectedCategoryItems = document.getElementsByClassName('pnp-categoryTitle selected');
            if (previouslySelectedCategoryItems &&
                previouslySelectedCategoryItems.length > 0) {
                previouslySelectedCategoryItems[0].classList.remove('selected');
            }

            // highlight the the currently selected item
            var categoryItem = document.getElementById('category-' + categoryId);
            if (categoryItem) {
                if (!categoryItem.classList.contains('selected')) {
                    categoryItem.classList.add('selected');
                }
            }

            // play with show/hide against the real template items
            var packages = document.getElementsByClassName('pnp-item pnp-item-regular');
            if (packages) {
                for (var i = 0; i < packages.length; i++) {
                    // if the package belongs to the currently selected category
                    if (packages[i].classList.contains('category-' + categoryId) &&
                        packages[i].classList.contains('hide')) {
                        // show the package
                        packages[i].classList.remove('hide');
                    }
                    else if (!packages[i].classList.contains('hide') &&
                        !packages[i].classList.contains('category-' + categoryId)) {
                        // hide any other package that is not already hidden
                        packages[i].classList.add('hide');
                    }
                }
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            selectCategory('@Model.Categories.First().Key.ToLower()');
        });

    </script>
}
